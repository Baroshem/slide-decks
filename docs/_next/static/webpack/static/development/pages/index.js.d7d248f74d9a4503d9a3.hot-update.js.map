{"version":3,"file":"static/webpack/static/development/pages/index.js.d7d248f74d9a4503d9a3.hot-update.js","sources":["webpack:///./slide-deck/Slide/Slide.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container } from './Slide.styles';\n\nconst useScaleLevel = (slideWidth, slideHeight) => {\n  const [scale, setScale] = useState(1);\n\n  useEffect(() => {\n    const handleScaleChange = ({ currentTarget: { innerWidth, innerHeight } }) => {\n      const scaleX = innerWidth / slideWidth;\n      const scaleY = innerHeight / slideHeight;\n      setScale(Math.min(scaleX, scaleY));\n    };\n\n    window.addEventListener('resize', handleScaleChange);\n    handleScaleChange({ currentTarget: window });\n    return () => {\n      window.removeEventListener('resize', handleScaleChange);\n    };\n  });\n\n  return scale;\n};\n\nconst Slide = ({ slideWidth, slideHeight, visible, children, style }) => {\n  const scale = useScaleLevel(slideWidth, slideHeight);\n  console.log('slide rendered');\n  return (\n    <Container style={style} scale={scale} visible={visible} slideWidth={slideWidth} slideHeight={slideHeight}>\n      {children}\n    </Container>\n  );\n};\n\nexport default Slide;\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}