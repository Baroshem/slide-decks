{"version":3,"file":"static/webpack/static/development/pages/index.js.11e878d7b17118ca50ed.hot-update.js","sources":["webpack:///./slide-deck/Deck/Deck.tsx"],"sourcesContent":["import { Component, Fragment } from 'react';\nimport Head from 'next/head';\nimport GlobalStyle from '../GlobalStyle';\nimport Slide from '../Slide';\nimport { Container } from './Deck.styles';\n\nconst omit = (obj, arr) =>\n  Object.keys(obj)\n    .filter(k => !arr.includes(k))\n    .reduce((acc, key) => ((acc[key] = obj[key]), acc), {});\n\nconst renderHead = head => {\n  if (head) {\n    return (\n      <Head>\n        {Object.keys(head).map(key => {\n          if (typeof head[key] === 'string') {\n            return React.createElement(key, { key }, head[key]);\n          }\n\n          return React.createElement(key, { key, ...head[key] }, null);\n        })}\n      </Head>\n    );\n  }\n\n  return null;\n};\n\nclass Deck extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slideIndex: 0,\n    };\n\n    this.template = props.templates[props.deck.template];\n    this.slides = props.deck.slides.map((slide, i) => ({ ...slide, key: i }));\n    this.slidesCount = this.slides.length;\n    this.head = { ...this.template.head, ...props.deck.head };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleArrowPress);\n    const slideIndex = Number(window.location.hash.replace('#', ''));\n\n    if (this.state.slideIndex !== slideIndex) {\n      this.setState({ slideIndex });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.slideIndex !== this.state.slideIndex) {\n      window.location.hash = this.state.slideIndex;\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleArrowPress);\n  }\n\n  handleArrowPress = ({ keyCode }) => {\n    if (keyCode === 37 && this.state.slideIndex !== 0) {\n      this.prevSlide();\n    } else if (keyCode === 39 && this.state.slideIndex !== this.slidesCount - 1) {\n      this.nextSlide();\n    }\n  };\n\n  nextSlide = () => this.setState(state => ({ slideIndex: state.slideIndex + 1 }));\n\n  prevSlide = () => this.setState(state => ({ slideIndex: state.slideIndex - 1 }));\n\n  render() {\n    const { slideIndex } = this.state;\n    const { slideWidth, slideHeight } = this.template.defaults;\n\n    return (\n      <Fragment>\n        {renderHead(this.head)}\n        <GlobalStyle templateStyle={this.template.styles} />\n        <Container>\n          {this.slides.map(slide => {\n            const Comp = this.template.slides[slide.template];\n            const props = omit(slide, ['template']);\n\n            return (\n              <Slide\n                visible={slideIndex === slide.key}\n                key={slide.key}\n                slideWidth={slideWidth}\n                slideHeight={slideHeight}\n              >\n                <Comp {...props} style={slide.style} />\n              </Slide>\n            );\n          })}\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nexport default Deck;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAHA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA+BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;AAuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAxCA;AAyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAxCA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AATA;AAUA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAcA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;;;;AAvEA;AACA;AAyEA;;;;A","sourceRoot":""}